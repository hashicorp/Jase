global:
  datacenter: "dc1"
  name: consul
  domain: consul
  image: hashicorp/consul-enterprise:1.11.2-ent
  enterpriseLicense:
    secretName: consul-ent-license
    secretKey: key
  # adminPartitions:
  #   enabled: false
  tls:
    enabled: true
    httpsOnly: false
    enableAutoEncrypt: true
  federation:
    enabled: true
    createFederationSecret: true
  acls:
    manageSystemACLs: true
    createReplicationToken: true
  gossipEncryption:
    autoGenerate: true
  enableConsulNamespaces: true
  metrics:
    enabled: true
    enableAgentMetrics: true
    enableGatewayMetrics: true
server:
  replicas: 1
  exposeGossipAndRPCPorts: true
client:
  extraConfig: |
    {
      "audit": {
          "enabled": false,
          "sink": {
              "My sink": {
                  "type": "file",
                  "format": "json",
                  "path": "/consul/data/audit.json",
                  "delivery_guarantee": "best-effort",
                  "rotate_duration": "24h",
                  "rotate_max_files": 1,
                  "rotate_bytes": 25165824
              }
          }
      }
    }
  exposeGossipAndRPCPorts: true
connectInject:
  replicas: 1
  enabled: true
  transparentProxy:
    defaultEnabled: true
  envoyExtraArgs: "--log-level debug"
  consulNamespaces:
    mirroringK8S: true
  metrics:
    defaultEnabled: true
    defaultEnableMerging: true
    defaultPrometheusScrapePort: 20200
    defaultPrometheusScrapePath: "/metrics"
prometheus:
  enabled: true
controller:
  enabled: true
meshGateway:
  enabled: true
  replicas: 1
ingressGateways:
  replicas: 1
  enabled: false
  gateways:
    - name: ingress-gateway
      service:
        type: LoadBalancer
terminatingGateways:
  replicas: 1
  enabled: false
  gateways:
  - name: terminating-gateway
    # extraVolumes:
    # - type: secret
    #   name: webserver-tls
    #   items:
    #   - key: caFile
    #     path: consulCa.pem   
    #   - key: caKey
    #     path: consul.key
    #   - key: certFile
    #     path: consul.crt
ui:
  enabled: true
  service:
    type: LoadBalancer
  metrics:
    enabled: true
    provider: "prometheus"
    baseURL: http://prometheus-server
syncCatalog:
  enabled: true
  consulNamespaces:
    mirroringK8S: true
  k8sDenyNamespaces: ["kube-system", "kube-public", "consul"]
