# Copyright (c) HashiCorp, Inc.
# SPDX-License-Identifier: MPL-2.0

global:
  name: consul-ten2
  enabled: false
  domain: consul
  datacenter: dc1
  image: hashicorp/consul-enterprise:1.18.2-ent
# imageEnvoy: "envoyproxy/envoy-alpine:v1.25.6"   # Pulls the latest supported when unspecified.
  imageConsulDataplane: "hashicorp/consul-dataplane:1.4.3"  # Pulls the latest when unspecified.
# imageK8S: hashicorp/consul-k8s-control-plane:1.2.1
  logLevel: "debug"

  enterpriseLicense:
    secretName: consul-ent-license
    secretKey: key

  dns:
    enabled: true
    enableRedirection: true
 
  adminPartitions:
    enabled: true
    name: tenant-2

  enableConsulNamespaces: true

  tls:
    enabled: true
    caCert:
      secretName: consul-ca-cert 
      secretKey: tls.crt
    caKey:
      secretName: consul-ca-key 
      secretKey: tls.key

  acls:
    manageSystemACLs: true
    bootstrapToken:
      secretName: consul-partitions-acl-token 
      secretKey: token

externalServers:
  enabled: true
  hosts: [34.140.76.20]
  tlsServerName: server.dc5.consul
  k8sAuthMethodHost: https://104.155.117.87

controller: 
  enabled: true

metrics:
    defaultEnabled: true
    defaultEnableMerging: true
    defaultPrometheusScrapePort: 20200
    defaultPrometheusScrapePath: "/metrics"
    defaultMergedMetricsPort: 20100
    agentMetricsRetentionTime: '1m'
    enableGatewayMetrics: true

# apiGateway:
#   enabled: false

connectInject:
  consulNamespaces:
    mirroringK8S: true
  enabled: true
  default: true                 # Default
  transparentProxy:
    defaultEnabled: true         # Default
#  cni:
#    enabled: true
  metrics:
    defaultEnabled: true
    defaultEnableMerging: false
    defaultPrometheusScrapePort: 20200
    defaultPrometheusScrapePath: "/metrics"
    defaultMergedMetricsPort: 20100


syncCatalog:
  enabled: true
  k8sPrefix: null
  k8sDenyNamespaces: ["kube-system", "kube-public"]
  consulNamespaces:
    mirroringK8S: true
    mirroringK8SPrefix: ""
  # addK8SNamespaceSuffix: false        # Leave this disabled. It's a TRAP!!! if the service name matches the pod name, it'll get stomped.

# apiGateway:
#  image: "hashicorp/consul-api-gateway:latest"
#   enabled: true
#   image: hashicorp/consul-api-gateway:0.5.4
#   logLevel: debug
#   managedGatewayClass:
#   enabled: true
#   serviceType: LoadBalancer

terminatingGateways:
  enabled: true

ingressGateways:
  enabled: true
  gateways:
    - name: ingress-gateway
      service:
        type: 'LoadBalancer'
        ports:
          - port: 8080

  wanAddress:
    source: Service
#       annotations: |
#         'service.beta.kubernetes.io/aws-load-balancer-internal': "false"


meshGateway:
  enabled: true
  replicas: 1
# service:
#   enabled: true
#   type: 'LoadBalancer'
# wanAddress:
#   source: Service

prometheus:
 enabled: true
